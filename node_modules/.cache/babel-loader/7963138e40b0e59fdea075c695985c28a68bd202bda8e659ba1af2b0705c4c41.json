{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Downloads\\\\gistapi-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Header from \"./components/Header\";\nimport GistList from \"./components/GistList\";\nimport { CacheContext } from './context/CacheContext';\nimport GlobalStyles from \"./GlobalStyle\";\nimport { Octokit } from \"@octokit/rest\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst octokit = new Octokit();\nconst Wrapper = styled.div`\n  font-size: 14px;\n  line-height: 1.5;\n`;\n_c = Wrapper;\nconst App = () => {\n  _s();\n  const [gists, setGists] = useState([]);\n  const [cache, setCache] = useState({});\n  const [initialPublicGists, setInitialPublicGists] = useState(null);\n  const getPublicGists = async () => {\n    const response = await octokit.gists.listPublic();\n    const data = response.data;\n    setGists(data);\n    setInitialPublicGists(data);\n  };\n  useEffect(() => {\n    getPublicGists();\n  }, []);\n  const getGistForUser = async username => {\n    if (cache[username]) {\n      setGists(cache[username]);\n    } else {\n      const response = await octokit.gists.listForUser({\n        username\n      });\n      const data = response.data;\n      setCache({\n        ...cache,\n        [username]: data\n      });\n      setGists(data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CacheContext.Provider, {\n    value: {\n      getGistForUser,\n      getPublicGists,\n      initialPublicGists\n    },\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      className: \"App\",\n      \"data-testid\": \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        setGists: setGists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GistList, {\n        gists: gists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"qAoo3rV6IbXYVC4IQDJJ/pkGpx4=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","styled","Header","GistList","CacheContext","GlobalStyles","Octokit","jsxDEV","_jsxDEV","octokit","Wrapper","div","_c","App","_s","gists","setGists","cache","setCache","initialPublicGists","setInitialPublicGists","getPublicGists","response","listPublic","data","getGistForUser","username","listForUser","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/pc/Downloads/gistapi-main/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Header from \"./components/Header\";\nimport GistList from \"./components/GistList\";\nimport { CacheContext } from './context/CacheContext';\nimport GlobalStyles from \"./GlobalStyle\";\nimport { Octokit } from \"@octokit/rest\";\n\nconst octokit = new Octokit();\n\nconst Wrapper = styled.div`\n  font-size: 14px;\n  line-height: 1.5;\n`;\n\nconst App = () => {\n  const [gists, setGists] = useState([]);\n  const [cache, setCache] = useState({});\n  const [initialPublicGists, setInitialPublicGists] = useState(null);\n\n  const getPublicGists = async () => {\n    const response = await octokit.gists.listPublic();\n    const data = response.data;\n    setGists(data);\n    setInitialPublicGists(data); \n  };  \n\n  useEffect(() => {\n    getPublicGists();\n  }, []);\n\n  const getGistForUser = async (username) => {\n    if (cache[username]) {\n      setGists(cache[username]);\n    } else {\n      const response = await octokit.gists.listForUser({ username });\n      const data = response.data;\n      setCache({ ...cache, [username]: data });\n      setGists(data);\n    }\n  };\n\n  return (\n    <CacheContext.Provider value={{ getGistForUser, getPublicGists, initialPublicGists }}>\n      <Wrapper className=\"App\" data-testid=\"app\">\n        <Header setGists={setGists} />\n        <GistList gists={gists} />\n        <GlobalStyles />\n      </Wrapper>\n    </CacheContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}